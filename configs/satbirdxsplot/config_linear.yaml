#where to save checkpoints
save_path: "model_checkpoints/4_SatBirdxsPlotOpen/satbirdxsplot_linear"

# load existing checkpoint for inference. If passing experiment folder instead (for multiple seeds), it will evaluate all of them.
# always use the best checkpoint
load_ckpt_path: "model_checkpoints/4_SatBirdxsPlotOpen/satbirdxsplot_linear"
save_preds_path: ""

comet:
  project_name: "SDMPartialLabels"
  tags: [ "satbird + splots", "baseline", "multimetric" ]
  experiment_name: "satbirdxsplot_linear" # specify for training, or use to report test results
  experiment_key: "" # use to report test results,

dataloader_to_use: "SDMEnvDataset"

model:
  name: "Linear"
  input_dim: 27
  hidden_dim: 256
  backbone:

training:
  seed: 1337
  lr: 0.0001
  max_epochs: 50
  accelerator: "cpu"

losses:
  criterion: "BCE"

# During testing, eval family of birds (0), or family of plants (1)
predict_family_of_species: -1

data:
  loaders:
    num_workers: 8
    batch_size: 128
    weighted_sampling: False

  #o you want to use environmental data (pedological and bioclimatic (low res) data) #ped" or "bioclim" or both or empty list
  env: [ 'bio_1', 'bio_2',
         'bio_3', 'bio_4', 'bio_5', 'bio_6', 'bio_7', 'bio_8', 'bio_9', 'bio_10',
         'bio_11', 'bio_12', 'bio_13', 'bio_14', 'bio_15', 'bio_16', 'bio_17',
         'bio_18', 'bio_19', 'bdticm', 'bldfie', 'cecsol', 'clyppt', 'orcdrc',
         'phihox', 'sltppt', 'sndppt' ]
  
  files:
    base: "/data"
    train: [ "SatBirdxsPlotOpen/satbird_splots_train_split.csv" ]
    val: [ "SatBirdxsPlotOpen/satbird_splots_valid_split.csv" ]
    test: [ "SatBirdxsPlotOpen/satbird_splots_test_split.csv" ]

    # it has to be in this order as the keys in per_taxa_species_count
    targets_file: [ "SatBird_data_v2/USA_summer/satbird_usa_summer_targets.pkl",
                    "SatBirdxsPlotOpen/sPlotOpen_targets_US_only.pkl" ] # target files follow the same format as SatBird (hotspotID: target_array)

    satbird_species_indices_path: "SatBird_data_v2/USA_summer/stats"
    #TODO: remove this and compute dynamically
    plant_test_species_indices_file: "SatBirdxsPlotOpen/plant_test_species_indices_US_only.npy"
    plant_val_species_indices_file: "SatBirdxsPlotOpen/plant_validation_species_indices_US_only.npy"

  # when combining two different taxa
  multi_taxa: True
  per_taxa_species_count: { "bird": 670, "plant": 607 }
  total_species: 1277
  monitor_metric_1: "val_topk_bird"
  monitor_metric_2: "val_auc_plant"

